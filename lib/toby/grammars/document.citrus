grammar Toby::Document
  include Toby::Primitive

  rule document
    (comment | table_array | table | keyvalue | line_break)*
  end

  rule table_array
    (space? '[[' stripped_key ']]' comment?) <Toby::Parser::Match::ArrayTable>
  end

  rule table
    (space? '[' stripped_key ']' comment?) <Toby::Parser::Match::Table>
  end

  rule keyvalue
    (stripped_key '=' space? v:(toml_values) comment?) <Toby::Parser::Match::KeyValue>
  end

  rule inline_table
    (space? '{' (keyvalue? (',' keyvalue)*)? space? '}' ) <Toby::Parser::Match::InlineTable>
  end

  rule array_comments
    (indent? (comment indent?)*)
  end

  rule array
    ("[" array_comments (array_elements)? space ","? array_comments "]" indent?) <Toby::Parser::Match::Array>
  end

  rule array_element
    primitive | inline_table | array
  end

  rule array_elements
    (array_element (space "," array_comments array_element)*) {
      captures[:array_element].map(&:value)
    }
  end

  rule toml_values
    primitive | inline_table | array
  end

  rule stripped_key
    (space? key space?) { captures[:key].first.value }
  end
end